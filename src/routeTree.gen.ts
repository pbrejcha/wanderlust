/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

import { Route as rootRouteImport } from './routes/__root'

const UpdatesLazyRouteImport = createFileRoute('/updates')()
const TripsLazyRouteImport = createFileRoute('/trips')()
const SavedLazyRouteImport = createFileRoute('/saved')()
const ExploreLazyRouteImport = createFileRoute('/explore')()
const IndexLazyRouteImport = createFileRoute('/')()

const UpdatesLazyRoute = UpdatesLazyRouteImport.update({
  id: '/updates',
  path: '/updates',
  getParentRoute: () => rootRouteImport,
} as any).lazy(() => import('./routes/updates.lazy').then((d) => d.Route))
const TripsLazyRoute = TripsLazyRouteImport.update({
  id: '/trips',
  path: '/trips',
  getParentRoute: () => rootRouteImport,
} as any).lazy(() => import('./routes/trips.lazy').then((d) => d.Route))
const SavedLazyRoute = SavedLazyRouteImport.update({
  id: '/saved',
  path: '/saved',
  getParentRoute: () => rootRouteImport,
} as any).lazy(() => import('./routes/saved.lazy').then((d) => d.Route))
const ExploreLazyRoute = ExploreLazyRouteImport.update({
  id: '/explore',
  path: '/explore',
  getParentRoute: () => rootRouteImport,
} as any).lazy(() => import('./routes/explore.lazy').then((d) => d.Route))
const IndexLazyRoute = IndexLazyRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any).lazy(() => import('./routes/index.lazy').then((d) => d.Route))

export interface FileRoutesByFullPath {
  '/': typeof IndexLazyRoute
  '/explore': typeof ExploreLazyRoute
  '/saved': typeof SavedLazyRoute
  '/trips': typeof TripsLazyRoute
  '/updates': typeof UpdatesLazyRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexLazyRoute
  '/explore': typeof ExploreLazyRoute
  '/saved': typeof SavedLazyRoute
  '/trips': typeof TripsLazyRoute
  '/updates': typeof UpdatesLazyRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexLazyRoute
  '/explore': typeof ExploreLazyRoute
  '/saved': typeof SavedLazyRoute
  '/trips': typeof TripsLazyRoute
  '/updates': typeof UpdatesLazyRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/explore' | '/saved' | '/trips' | '/updates'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/explore' | '/saved' | '/trips' | '/updates'
  id: '__root__' | '/' | '/explore' | '/saved' | '/trips' | '/updates'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexLazyRoute: typeof IndexLazyRoute
  ExploreLazyRoute: typeof ExploreLazyRoute
  SavedLazyRoute: typeof SavedLazyRoute
  TripsLazyRoute: typeof TripsLazyRoute
  UpdatesLazyRoute: typeof UpdatesLazyRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/updates': {
      id: '/updates'
      path: '/updates'
      fullPath: '/updates'
      preLoaderRoute: typeof UpdatesLazyRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/trips': {
      id: '/trips'
      path: '/trips'
      fullPath: '/trips'
      preLoaderRoute: typeof TripsLazyRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/saved': {
      id: '/saved'
      path: '/saved'
      fullPath: '/saved'
      preLoaderRoute: typeof SavedLazyRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/explore': {
      id: '/explore'
      path: '/explore'
      fullPath: '/explore'
      preLoaderRoute: typeof ExploreLazyRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexLazyRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexLazyRoute: IndexLazyRoute,
  ExploreLazyRoute: ExploreLazyRoute,
  SavedLazyRoute: SavedLazyRoute,
  TripsLazyRoute: TripsLazyRoute,
  UpdatesLazyRoute: UpdatesLazyRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
